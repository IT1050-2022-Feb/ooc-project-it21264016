//driver class
class driver
{
private:
	char driverUsername[50];
	char driverPassword[50];

public:
	driver();
	driver(const char username[50], const char password[50]);
	void deliverItem();
	~driver();
};

//driver implementation

#include "driver.h"
#include <iostream>
#include <cstring>
driver::driver(const char username[50], const char password[50])
{
	strcpy(driverUsername, username);
	strcpy(driverPassword, password);

}

void driver::deliverItem()
{

}

driver::~driver()
{

}


//petStoreManager class
class petStoreManager {

private:
	char psmUsername[40];
	char psmPassword[40];
	order* odr[SIZE];

public:

	petStoreManager(const char ppsmUsername[40], const char ppsmPassword[40]);
	void addOrder(order* odr1, order* odr2);
	void checkOrders();
	void restokItems();
	~petStoreManager();
};

//petStoreManager implementation

#include "petStoreManager.h"
#include "order.h"
#include <iostream>
#include <cstring>

petStoreManager::petStoreManager(const char ppsmUsername[40], const char ppsmPassword[40])
{
	strcpy(psmUsername, ppsmUsername);
	strcpy(psmPassword, ppsmPassword);

}
void petStoreManager::addOrder(order* odr1, order* odr2)
{
	odr[0] = odr1;
	odr[1] = odr2;
}
void petStoreManager::checkOrders()
{

}
void petStoreManager::restokItems()
{

}
petStoreManager::~petStoreManager()
{

}


//item class

class item
{
private:
	int itemId;
	char itemName[40];
	deliveryStaff* del[SIZE];
	order* ord[SIZE];
	petStoreManager* PSM[SIZE];
public:
	item();
	item(int pitemId, const char pitemName[40], int porderID_1, const char plocation_1[40], int offerCode_1, int porderID_2, const char plocation_2[40], int offerCode_2);
	void adddelivary(deliveryStaff* del1, deliveryStaff* del2);
	void addPetStoreManager(petStoreManager* PSM1, petStoreManager* PSM2);
	void addItems();
	void UpdateItems();
	void restockItems();
	~item();
};

//item implementation

#include "item.h"
#include "deliveryStaff.h"
#include "petStoreManager.h"
#include <iostream>
#include <cstring>
#define SIZE 2

item::item()
{
 itemId=0;
 strcpy(itemName,"");	
}
item::item(int pitemId, const char pitemName[40], int porderID_1, const char plocation_1[40], int offerCode_1, int porderID_2, const char plocation_2[40], int offerCode_2)
{
	itemId = pitemId;
	strcpy(itemName, pitemName);
	ord[0] = new order(porderID_1, plocation_1, offerCode_1);

	ord[1] = new order(porderID_2, plocation_2, offerCode_2);
}

void item::adddelivary(deliveryStaff* del1, deliveryStaff* del2) {
	del[0] = del1;
	del[1] = del2;
}

void item::addPetStoreManager(petStoreManager* PSM1, petStoreManager* PSM2)
{
	PSM[0] = PSM1;
	PSM[1] = PSM2;
}
void item::addItems() {}
void item::UpdateItems() {}
void item::restockItems() {}
item::~item()
{

}















